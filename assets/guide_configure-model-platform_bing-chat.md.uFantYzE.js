import{_ as e,c as a,o as i,a8 as o}from"./chunks/framework.kpza2nAE.js";const t="/assets/plugin_newbing_adapter_1.B_rg_8fJ.png",n="/assets/plugin_newbing_cookie_1.DLvckJfK.png",c="/assets/plugin_newbing_cookie_2.BLVYEyLK.png",s="/assets/plugin_newbing_cookie_3.BV-j1Tg2.png",p="/assets/plugin_newbing_cookie_4.dX41esuQ.png",g="/assets/plugin_newbing_cookie_5.Cy_5mEJk.png",r="/assets/plugin_newbing_pic2.VBRWPNQK.png",d="/assets/plugin_newbing_pic3.DarOmPR3.png",l="/assets/plugin_newbing_pic4.wUofsnFg.png",_="/assets/plugin_newbing_pic5.CQUTIggG.png",y=JSON.parse('{"title":"New Bing","description":"","frontmatter":{},"headers":[],"relativePath":"guide/configure-model-platform/bing-chat.md","filePath":"guide/configure-model-platform/bing-chat.md","lastUpdated":1704124666000}'),m={name:"guide/configure-model-platform/bing-chat.md"},h=o('<h1 id="new-bing" tabindex="-1">New Bing <a class="header-anchor" href="#new-bing" aria-label="Permalink to &quot;New Bing&quot;">​</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>New Bing 是基于 GPT 4 的聊天机器人，可以实现对话式问答。并能结合 Bing 的搜索能力与网页阅读能力实现联网获取信息。</p><p>我们支持对接 New Bing 中的三种聊天模式（创造，平衡，精确），并且额外适配了 New Bing 的识图功能。</p><div class="tip custom-block"><p class="custom-block-title">提示</p><p>在短期内我们不会适配 New Bing 的画图功能。</p></div><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><p>前往插件市场，搜索 <code>chatluna-newbing-adapter</code>，安装即可。</p><p><img src="'+t+'" alt="images"></p><h2 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h2><p>在配置之前，请先确认你的 Bing 账号具有 New Bing 的访问权限，并且目前可以使用当前的浏览器正常访问 New Bing。</p><p>如果你的 Koishi 部署在国内环境，请你为 ChatLuna 设置插件代理。</p><div class="tip custom-block"><p class="custom-block-title">提示</p><p>未来我们可能会录制官方教程，敬请期待。</p></div><p>打开 <code>Microsoft Edge</code> 浏览器（其他基于 Chromium 内核的浏览器也类似），然后键入 <code>https://www.bing.com</code> 打开 bing 官网。</p><p><img src="'+n+'" alt="images"></p><p>按 <code>f12</code>，打开开发者工具，并转到网络选项卡。</p><p><img src="'+c+'" alt="images"></p><p>点击上方的红色监听按钮取消监听，在点击一次监听按钮然后立即按 <code>f5</code> 刷新网页。等待几秒后点击监听按钮取消监听。</p><p>此时滚动鼠标，将监听列表拉至最上，可以看到 <code>bing.com</code> 的请求，点开它。</p><p><img src="'+s+'" alt="images"></p><p>打开后会自动为我们进入标头选项卡。里面含有 <code>常规</code>，<code>响应标头</code>，<code>请求标头</code> 三大项，我们将前两项折叠，从 <code>请求标头</code> 内寻找 <code>cookie</code>。</p><p><img src="'+p+'" alt="images"></p><p>在 <code>请求标头</code> 内找到 <code>cookie</code> 项，滚动鼠标以全选 cookie，将其复制。此时你已经复制了使用 New Bing 适配器所需 cookie。</p><p><img src="'+g+'" alt="images"></p><p>让我们回到插件的配置页。当你新建插件后，插件默认会提供一个 cookie 配置项（即 cookies[0]），将我们刚才复制的 cookie 粘贴进去。</p><p><img src="'+r+'" alt="images"></p><p>记得点击右上角的保存按钮。</p><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><p>在 New Bing 适配器的配置页面，点击运行按钮，如无误，你应该看不到任何错误 log，那即可转到 ChatLuna 的主插件页面。</p><p>在主插件页面，下划到 <a href="./../useful-configurations.html#模版房间选项">模版房间选项</a>，查看 <a href="./../useful-configurations.html#defaultmodel">defaultModel</a> 的选项里是否含有符合 <code>bing/xxx</code> 格式的模型，如果有，则说明 New Bing 适配器已经成功的运行。</p><p>但我们仍未确认 New Bing 适配器是否连接到 New Bing。</p><p>因此我们需要新建一个房间，使用 <code>chatluna.room.create -m bing/creative -p chatgpt -n test-bing-adapter -c chat -v private</code> 指令来创建一个使用了 New Bing 适配器的房间。</p><p><img src="'+d+'" alt="images"></p><p>让我们尝试和模型对话。 只要能正常对话，就说明你成功的连接到了 New Bing，接入了 New Bing 适配器。</p><p><img src="'+l+'" alt="images"></p><p>别忘了在测试完成后调用 <code>chatluna.room.delete test-bing-adapter</code> 指令删除测试房间。</p><p><img src="'+_+'" alt="images"></p><h2 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h2><h3 id="什么是-sydney-模式" tabindex="-1">什么是 Sydney 模式？ <a class="header-anchor" href="#什么是-sydney-模式" aria-label="Permalink to &quot;什么是 Sydney 模式？&quot;">​</a></h3><p>开启 Sydney 模式后，会通过某些方式突破 New Bing 的限制，可以做到：</p><ol><li>支持上下文对话，不再局限于 30 次限制（但是仍然是有限的，历史聊天记录容量太大就可能会裁剪或清空对话）</li><li>人格设定，设置系统 Prompt，默认设置为 Sydney</li></ol><p>而且打开此功能突破了限制后账号可能会有被封风险，谨慎使用。</p>',41),u=[h];function b(f,w,k,B,N,P){return i(),a("div",null,u)}const x=e(m,[["render",b]]);export{y as __pageData,x as default};
