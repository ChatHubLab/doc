import{_ as e,o as a,c as t,Q as d}from"./chunks/framework.4719a631.js";const m=JSON.parse('{"title":"koishi-plugin-chathub-claude2-adapter","description":"","frontmatter":{},"headers":[],"relativePath":"guide/configure-model-platform/cluade-2.md","filePath":"guide/configure-model-platform/cluade-2.md","lastUpdated":1689603049000}'),o={name:"guide/configure-model-platform/cluade-2.md"},l=d('<h1 id="koishi-plugin-chathub-claude2-adapter" tabindex="-1">koishi-plugin-chathub-claude2-adapter <a class="header-anchor" href="#koishi-plugin-chathub-claude2-adapter" aria-label="Permalink to &quot;koishi-plugin-chathub-claude2-adapter&quot;">​</a></h1><p><a href="https://www.npmjs.com/package/@dingyi222666/koishi-plugin-chathub-claude2-adapter" target="_blank" rel="noreferrer"><img src="https://img.shields.io/npm/v/@dingyi222666/koishi-plugin-chathub-claude2-adapter/next" alt="npm"></a></p><blockquote><p>这是一个为 <a href="https://github.com/ChatHubLab/chathub" target="_blank" rel="noreferrer">ChatHub</a> 提供 <a href="https://claude.ai/chats" target="_blank" rel="noreferrer">Claude 2</a> 支持的适配器插件</p></blockquote><p>本章节将介绍如何使用本插件来实现与 Claude 2 的聊天互动。本章节包括以下内容：</p><ul><li><a href="#如何使用">如何使用？</a></li><li><a href="#常见问题">常见问题</a></li><li><a href="#配置项">配置项</a></li></ul><h2 id="如何使用" tabindex="-1">如何使用？ <a class="header-anchor" href="#如何使用" aria-label="Permalink to &quot;如何使用？&quot;">​</a></h2><ol><li>在插件市场安装本插件(<code>chathub-cluade2-adapter</code>)，并安装好本插件依赖的前置插件。</li><li>获取到已经有 Claude 2 访问权限账号的在 Claude 网站的 Cookie。只需要获取到 Cookie 里面 <code>sessionKey</code> 的值然后填入进去就行了。</li><li>在插件的设置中填写你的 Cookie。</li><li>国内环境需要设置代理，请在<code>chathub</code>主插件里设置里设置代理(请求设置 -&gt; isProxy，请求设置 -&gt; proxyAddress)。</li></ol><h2 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h2><h3 id="国内环境怎么使用" tabindex="-1">国内环境怎么使用？ <a class="header-anchor" href="#国内环境怎么使用" aria-label="Permalink to &quot;国内环境怎么使用？&quot;">​</a></h3><p>由于国内网络环境的限制，你可能无法直接访问 Claude 2 的服务。为了解决这个问题，你有以下两种方法：</p><ul><li>在 Koishi 的全局设置里设置代理。这样，Koishi 就会通过代理来访问 Claude 2 的服务。请注意，这种方法需要你本地开启代理，并且可能会影响 Koishi 的其他功能。</li><li>在<code>chathub</code>主插件的设置里设置代理(请求设置 -&gt; isProxy，请求设置 -&gt; proxyAddress)。</li></ul><h2 id="配置项" tabindex="-1">配置项 <a class="header-anchor" href="#配置项" aria-label="Permalink to &quot;配置项&quot;">​</a></h2><p>介绍 <code>koishi-plugin-chathub-claude2-adapter</code> 插件的配置项，以及它们的含义和默认值。</p><h3 id="全局设置" tabindex="-1">全局设置 <a class="header-anchor" href="#全局设置" aria-label="Permalink to &quot;全局设置&quot;">​</a></h3><table><thead><tr><th>配置项</th><th>类型</th><th>必填</th><th>默认值</th><th>作用</th></tr></thead><tbody><tr><td>chatConcurrentMaxSize</td><td><code>number</code></td><td>否</td><td><code>1</code></td><td>设置当前适配器适配的模型的最大并发聊天数</td></tr><tr><td>chatTimeLimit</td><td><code>number</code> 或 <code>Computed&lt;Awaitable&lt;number&gt;&gt;</code></td><td>否</td><td><code>20</code></td><td>设置每小时的调用限额（次数）</td></tr><tr><td>timeout</td><td><code>number</code></td><td>否</td><td><code>200000</code></td><td>设置请求超时时间（毫秒）</td></tr><tr><td>maxRetries</td><td><code>number</code></td><td>否</td><td><code>3</code></td><td>设置模型请求失败后的最大重试次数</td></tr></tbody></table><h3 id="请求设置" tabindex="-1">请求设置 <a class="header-anchor" href="#请求设置" aria-label="Permalink to &quot;请求设置&quot;">​</a></h3><ul><li><code>cookie</code>: Claude 账号的 Cookie，用于访问 Claude 2 的 API。这是一个敏感信息，不应该泄露给他人。默认值为空字符串。</li><li><code>isProxy</code>: 是否使用代理访问 Claude 2 的 API。这是一个布尔值，如果为 true，则需要设置 <code>proxyAddress</code> 属性。默认值为 false。</li><li><code>proxyAddress</code>: 代理服务器的地址，用于访问 Claude 2 的 API。这是一个字符串，格式为 <code>http://host:port</code>。默认值为空字符串。</li></ul><h3 id="对话设置" tabindex="-1">对话设置 <a class="header-anchor" href="#对话设置" aria-label="Permalink to &quot;对话设置&quot;">​</a></h3><ul><li><code>formatMessages</code>: 是否使用历史聊天消息作为对话上下文。这是一个布尔值，如果为 true，则会将历史聊天消息拼接成一段文本，作为对话的输入。默认值为 false。</li></ul><hr><p>总结：</p><p>本章节介绍了如何使用 <code>koishi-plugin-chathub-claude2-adapter</code> 插件来实现与 Claude 2 的聊天互动。本章节包括了以下内容：</p><ul><li>如何安装和配置本插件</li><li>如何解决一些常见问题</li><li>如何定制本插件的配置项</li></ul><p>希望本章节对你有所帮助，如果你有任何问题或建议，请随时联系我们。谢谢！</p>',24),i=[l];function r(c,h,u,s,n,p){return a(),t("div",null,i)}const f=e(o,[["render",r]]);export{m as __pageData,f as default};
