import{_ as t,C as o,o as c,c as r,H as a,w as n,Q as p,k as s}from"./chunks/framework.8f599c84.js";const m=JSON.parse('{"title":"为 ChatLuna 开发插件","description":"","frontmatter":{},"headers":[],"relativePath":"development/getting-started.md","filePath":"development/getting-started.md","lastUpdated":1701101804000}'),i={name:"development/getting-started.md"},E=p('<h1 id="为-chatluna-开发插件" tabindex="-1">为 ChatLuna 开发插件 <a class="header-anchor" href="#为-chatluna-开发插件" aria-label="Permalink to &quot;为 ChatLuna 开发插件&quot;">​</a></h1><p>本节将以一个简易的例子，来介绍如何为 ChatLuna 开发一个插件（模型适配器）。</p><h2 id="前置条件" tabindex="-1">前置条件 <a class="header-anchor" href="#前置条件" aria-label="Permalink to &quot;前置条件&quot;">​</a></h2><p>俗话说的好，凡事预则立，不预则废。开发当然是要准备好相关环境和知识，而不是无目的的开发。你需要完成以下任务：</p><ol><li>基于 Koishi 官方的 <a href="https://koishi.chat/zh-CN/guide/develop/setup.html" target="_blank" rel="noreferrer">文档</a>，搭建好模版项目。</li><li>模版项目里安装 ChatLuna 的主插件。</li><li>学会并搭建好 Koishi 模版项目，了解并掌握编写 Koishi 插件的知识。</li></ol><h2 id="配置基础环境" tabindex="-1">配置基础环境 <a class="header-anchor" href="#配置基础环境" aria-label="Permalink to &quot;配置基础环境&quot;">​</a></h2><p>一切准备就绪，现在就可以开始新建一个插件了！</p><p>阅读 [此] (<a href="https://koishi.chat/zh-CN/guide/develop/workspace.html#%E5%88%9B%E5%BB%BA%E6%96%B0%E6%8F%92%E4%BB%B6" target="_blank" rel="noreferrer">https://koishi.chat/zh-CN/guide/develop/workspace.html#创建新插件</a>)文档，先新建一个插件。</p><h3 id="添加-chatluna-依赖" tabindex="-1">添加 ChatLuna 依赖 <a class="header-anchor" href="#添加-chatluna-依赖" aria-label="Permalink to &quot;添加 ChatLuna 依赖&quot;">​</a></h3><p>参考由 Koishi 官方编写的 <a href="https://koishi.chat/zh-CN/guide/develop/workspace.html#%E6%B7%BB%E5%8A%A0%E4%BE%9D%E8%B5%96" target="_blank" rel="noreferrer">文档</a>，添加 ChatLuna 依赖到你的插件。</p>',10),y=s("div",{class:"language-shell vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"shell"),s("pre",{class:"shiki github-dark vp-code-dark"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#B392F0"}},"npm"),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#9ECBFF"}},"install"),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#9ECBFF"}},"koishi-plugin-chatluna@next"),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#79B8FF"}},"-D"),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#79B8FF"}},"-P"),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#79B8FF"}},"-w"),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#9ECBFF"}},"koishi-plugin-[name]")])])]),s("pre",{class:"shiki github-light vp-code-light"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#6F42C1"}},"npm"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#032F62"}},"install"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#032F62"}},"koishi-plugin-chatluna@next"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#005CC5"}},"-D"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#005CC5"}},"-P"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#005CC5"}},"-w"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#032F62"}},"koishi-plugin-[name]")])])])],-1),u=s("div",{class:"language-shell vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"shell"),s("pre",{class:"shiki github-dark vp-code-dark"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#B392F0"}},"yarn"),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#9ECBFF"}},"workspace"),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#9ECBFF"}},"koishi-plugin-[name]"),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#9ECBFF"}},"add"),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#9ECBFF"}},"koishi-plugin-chatluna@next"),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#79B8FF"}},"-D"),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#79B8FF"}},"-P")])])]),s("pre",{class:"shiki github-light vp-code-light"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#6F42C1"}},"yarn"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#032F62"}},"workspace"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#032F62"}},"koishi-plugin-[name]"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#032F62"}},"add"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#032F62"}},"koishi-plugin-chatluna@next"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#005CC5"}},"-D"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#005CC5"}},"-P")])])])],-1),d=p(`<p>执行完后记得修改 <code>peerDependencies</code> 字段，将 ChatLuna 的版本号改为和 <code>devDependencies</code> 里的版本号一致。</p><p>如下：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&quot;peerDependencies&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;koishi&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;^4.15.6&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff remove"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;koishi-plugin-chatluna&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;*&quot;</span><span style="color:#E1E4E8;"> </span></span>
<span class="line diff add"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;koishi-plugin-chatluna&quot;</span><span style="color:#FDAEB7;font-style:italic;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;^1.0.0-beta.23&quot;</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#9ECBFF;">&quot;devDependencies&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;koishi-plugin-chatluna&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;^1.0.0-beta.23&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;peerDependencies&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;koishi&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;^4.15.6&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line diff remove"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;koishi-plugin-chatluna&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;*&quot;</span><span style="color:#24292E;"> </span></span>
<span class="line diff add"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;koishi-plugin-chatluna&quot;</span><span style="color:#B31D28;font-style:italic;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;^1.0.0-beta.23&quot;</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#032F62;">&quot;devDependencies&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;koishi-plugin-chatluna&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;^1.0.0-beta.23&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="添加-koishi-元属性" tabindex="-1">添加 Koishi 元属性 <a class="header-anchor" href="#添加-koishi-元属性" aria-label="Permalink to &quot;添加 Koishi 元属性&quot;">​</a></h3><p>在 <code>package.json</code> 里添加 <code>koishi</code> 字段，以声明插件的元属性。</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&quot;koishi&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;description&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">&quot;zh&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;你的插件描述&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;service&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">&quot;required&quot;</span><span style="color:#E1E4E8;">: [</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;chatluna&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        ]</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;koishi&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;description&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;zh&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;你的插件描述&quot;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;service&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;required&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;chatluna&quot;</span></span>
<span class="line"><span style="color:#24292E;">        ]</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>注意 <code>service</code> 字段里需要声明依赖 <code>chatluna</code> 服务，以保证你的插件能正常工作。</p><h3 id="声明依赖-chatluna-服务" tabindex="-1">声明依赖 ChatLuna 服务 <a class="header-anchor" href="#声明依赖-chatluna-服务" aria-label="Permalink to &quot;声明依赖 ChatLuna 服务&quot;">​</a></h3><p>打开新建插件的 <code>index.ts</code>，添加下面这几行，导入基本类，并且声明插件需要 ChatLuna 服务。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Context, Schema } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;koishi&#39;</span></span>
<span class="line diff add"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { </span></span>
<span class="line diff add"><span style="color:#E1E4E8;">   ChatLunaService, </span></span>
<span class="line diff add"><span style="color:#E1E4E8;">   ChatLunaPlugin, </span></span>
<span class="line diff add"><span style="color:#E1E4E8;">} </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;koishi-plugin-chatluna/lib/services/chat&quot;</span><span style="color:#E1E4E8;">; </span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;example&#39;</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"></span>
<span class="line diff add"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">inject</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&#39;chatluna&#39;</span><span style="color:#E1E4E8;">] </span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Config</span><span style="color:#E1E4E8;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Config</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Schema</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">Config</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Schema.</span><span style="color:#B392F0;">object</span><span style="color:#E1E4E8;">({})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">ctx</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Context</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// write your plugin here</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { Context, Schema } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;koishi&#39;</span></span>
<span class="line diff add"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { </span></span>
<span class="line diff add"><span style="color:#24292E;">   ChatLunaService, </span></span>
<span class="line diff add"><span style="color:#24292E;">   ChatLunaPlugin, </span></span>
<span class="line diff add"><span style="color:#24292E;">} </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;koishi-plugin-chatluna/lib/services/chat&quot;</span><span style="color:#24292E;">; </span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;example&#39;</span><span style="color:#24292E;"> </span></span>
<span class="line"></span>
<span class="line diff add"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">inject</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;chatluna&#39;</span><span style="color:#24292E;">] </span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Config</span><span style="color:#24292E;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Config</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Schema</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">Config</span><span style="color:#24292E;">&gt; </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Schema.</span><span style="color:#6F42C1;">object</span><span style="color:#24292E;">({})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">apply</span><span style="color:#24292E;">(</span><span style="color:#E36209;">ctx</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Context</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// write your plugin here</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>对于一个模型平台适配插件，其的主要组成部分包括 <code>Client</code>,<code>ModelRequester</code>,<code>Config</code>,<code>Plugin</code>。</p><p>下面让我们一步步来了解这些部分。</p><h2 id="模型配置" tabindex="-1">模型配置 <a class="header-anchor" href="#模型配置" aria-label="Permalink to &quot;模型配置&quot;">​</a></h2>`,13);function h(F,C,q,g,f,k){const l=o("PluginTabsTab"),e=o("PluginTabs");return c(),r("div",null,[E,a(e,null,{default:n(()=>[a(l,{label:"npm"},{default:n(()=>[y]),_:1}),a(l,{label:"yarn"},{default:n(()=>[u]),_:1})]),_:1}),d])}const _=t(i,[["render",h]]);export{m as __pageData,_ as default};
