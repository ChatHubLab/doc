import{_ as c,C as p,o as t,c as r,H as n,w as a,Q as o,k as s}from"./chunks/framework.8f599c84.js";const D=JSON.parse('{"title":"为 ChatLuna 开发插件","description":"","frontmatter":{},"headers":[],"relativePath":"development/getting-started.md","filePath":"development/getting-started.md","lastUpdated":1701342071000}'),E={name:"development/getting-started.md"},y=o('<h1 id="为-chatluna-开发插件" tabindex="-1">为 ChatLuna 开发插件 <a class="header-anchor" href="#为-chatluna-开发插件" aria-label="Permalink to &quot;为 ChatLuna 开发插件&quot;">​</a></h1><p>本节将以一个简易的例子，来介绍如何为 ChatLuna 开发一个插件（模型适配器）。</p><h2 id="前置条件" tabindex="-1">前置条件 <a class="header-anchor" href="#前置条件" aria-label="Permalink to &quot;前置条件&quot;">​</a></h2><p>俗话说的好，凡事预则立，不预则废。开发当然是要准备好相关环境和知识，而不是无目的的开发。你需要完成以下任务：</p><ol><li>基于 Koishi 官方的 <a href="https://koishi.chat/zh-CN/guide/develop/setup.html" target="_blank" rel="noreferrer">文档</a>，搭建好模版项目。</li><li>模版项目里安装 ChatLuna 的主插件。</li><li>了解并掌握编写 Koishi 插件的知识。</li></ol><h2 id="配置基础环境" tabindex="-1">配置基础环境 <a class="header-anchor" href="#配置基础环境" aria-label="Permalink to &quot;配置基础环境&quot;">​</a></h2><p>一切准备就绪，现在就可以开始新建一个插件了！</p><p>阅读 <a href="https://koishi.chat/zh-CN/guide/develop/workspace.html#%E5%88%9B%E5%BB%BA%E6%96%B0%E6%8F%92%E4%BB%B6" target="_blank" rel="noreferrer">此</a>文档，先新建一个插件。</p><h3 id="添加-chatluna-依赖" tabindex="-1">添加 ChatLuna 依赖 <a class="header-anchor" href="#添加-chatluna-依赖" aria-label="Permalink to &quot;添加 ChatLuna 依赖&quot;">​</a></h3><p>参考由 Koishi 官方编写的 <a href="https://koishi.chat/zh-CN/guide/develop/workspace.html#%E6%B7%BB%E5%8A%A0%E4%BE%9D%E8%B5%96" target="_blank" rel="noreferrer">文档</a>，添加 ChatLuna 依赖到你的插件。</p>',10),i=s("div",{class:"language-shell vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"shell"),s("pre",{class:"shiki github-dark vp-code-dark"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#B392F0"}},"npm"),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#9ECBFF"}},"install"),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#9ECBFF"}},"koishi-plugin-chatluna@next"),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#79B8FF"}},"-D"),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#79B8FF"}},"-P"),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#79B8FF"}},"-w"),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#9ECBFF"}},"koishi-plugin-[name]")])])]),s("pre",{class:"shiki github-light vp-code-light"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#6F42C1"}},"npm"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#032F62"}},"install"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#032F62"}},"koishi-plugin-chatluna@next"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#005CC5"}},"-D"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#005CC5"}},"-P"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#005CC5"}},"-w"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#032F62"}},"koishi-plugin-[name]")])])])],-1),u=s("div",{class:"language-shell vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"shell"),s("pre",{class:"shiki github-dark vp-code-dark"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#B392F0"}},"yarn"),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#9ECBFF"}},"workspace"),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#9ECBFF"}},"koishi-plugin-[name]"),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#9ECBFF"}},"add"),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#9ECBFF"}},"koishi-plugin-chatluna@next"),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#79B8FF"}},"-D"),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#79B8FF"}},"-P")])])]),s("pre",{class:"shiki github-light vp-code-light"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#6F42C1"}},"yarn"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#032F62"}},"workspace"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#032F62"}},"koishi-plugin-[name]"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#032F62"}},"add"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#032F62"}},"koishi-plugin-chatluna@next"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#005CC5"}},"-D"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#005CC5"}},"-P")])])])],-1),h=o(`<p>执行完后记得修改 <code>peerDependencies</code> 字段，将 ChatLuna 的版本号改为和 <code>devDependencies</code> 里的版本号一致。</p><p>如下：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&quot;peerDependencies&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;koishi&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;^4.15.6&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff remove"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;koishi-plugin-chatluna&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;*&quot;</span><span style="color:#E1E4E8;"> </span></span>
<span class="line diff add"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;koishi-plugin-chatluna&quot;</span><span style="color:#FDAEB7;font-style:italic;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;^1.0.0-beta.23&quot;</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#9ECBFF;">&quot;devDependencies&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;koishi-plugin-chatluna&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;^1.0.0-beta.23&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;peerDependencies&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;koishi&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;^4.15.6&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line diff remove"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;koishi-plugin-chatluna&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;*&quot;</span><span style="color:#24292E;"> </span></span>
<span class="line diff add"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;koishi-plugin-chatluna&quot;</span><span style="color:#B31D28;font-style:italic;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;^1.0.0-beta.23&quot;</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#032F62;">&quot;devDependencies&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;koishi-plugin-chatluna&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;^1.0.0-beta.23&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="添加-koishi-元属性" tabindex="-1">添加 Koishi 元属性 <a class="header-anchor" href="#添加-koishi-元属性" aria-label="Permalink to &quot;添加 Koishi 元属性&quot;">​</a></h3><p>在 <code>package.json</code> 里添加 <code>koishi</code> 字段，以声明插件的元属性。</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&quot;koishi&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;description&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">&quot;zh&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;你的插件描述&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;service&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">&quot;required&quot;</span><span style="color:#E1E4E8;">: [</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;chatluna&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        ]</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;koishi&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;description&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;zh&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;你的插件描述&quot;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;service&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;required&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;chatluna&quot;</span></span>
<span class="line"><span style="color:#24292E;">        ]</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>注意 <code>service</code> 字段里需要声明依赖 <code>chatluna</code> 服务，以保证你的插件能正常工作。</p><h3 id="声明依赖-chatluna-服务" tabindex="-1">声明依赖 ChatLuna 服务 <a class="header-anchor" href="#声明依赖-chatluna-服务" aria-label="Permalink to &quot;声明依赖 ChatLuna 服务&quot;">​</a></h3><p>打开新建插件的 <code>index.ts</code>，添加下面这几行，导入基本类，并且声明插件需要 ChatLuna 服务。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Context, Schema } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;koishi&#39;</span></span>
<span class="line diff add"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { </span></span>
<span class="line diff add"><span style="color:#E1E4E8;">   ChatLunaService, </span></span>
<span class="line diff add"><span style="color:#E1E4E8;">   ChatLunaPlugin, </span></span>
<span class="line diff add"><span style="color:#E1E4E8;">} </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;koishi-plugin-chatluna/lib/services/chat&quot;</span><span style="color:#E1E4E8;">; </span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;example&#39;</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"></span>
<span class="line diff add"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">inject</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&#39;chatluna&#39;</span><span style="color:#E1E4E8;">] </span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Config</span><span style="color:#E1E4E8;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Config</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Schema</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">Config</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Schema.</span><span style="color:#B392F0;">object</span><span style="color:#E1E4E8;">({})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">ctx</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Context</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// write your plugin here</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { Context, Schema } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;koishi&#39;</span></span>
<span class="line diff add"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { </span></span>
<span class="line diff add"><span style="color:#24292E;">   ChatLunaService, </span></span>
<span class="line diff add"><span style="color:#24292E;">   ChatLunaPlugin, </span></span>
<span class="line diff add"><span style="color:#24292E;">} </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;koishi-plugin-chatluna/lib/services/chat&quot;</span><span style="color:#24292E;">; </span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;example&#39;</span><span style="color:#24292E;"> </span></span>
<span class="line"></span>
<span class="line diff add"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">inject</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;chatluna&#39;</span><span style="color:#24292E;">] </span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Config</span><span style="color:#24292E;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Config</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Schema</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">Config</span><span style="color:#24292E;">&gt; </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Schema.</span><span style="color:#6F42C1;">object</span><span style="color:#24292E;">({})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">apply</span><span style="color:#24292E;">(</span><span style="color:#E36209;">ctx</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Context</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// write your plugin here</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>对于一个模型平台适配插件，其的主要组成部分包括 <code>Client</code>,<code>ModelRequester</code>,<code>ClientConfig</code>,<code>Plugin</code> 等。</p><p>下面让我们一步步来了解这些部分。</p><h2 id="平台配置" tabindex="-1">平台配置 <a class="header-anchor" href="#平台配置" aria-label="Permalink to &quot;平台配置&quot;">​</a></h2><p>对于一个模型适配器，通常都是通过 API 连接到目标平台，这之间自然少不了各种配置，API KEY 等。那么平台配置这块就是实体化这些配置的地方。</p><h3 id="定义-schema-配置" tabindex="-1">定义 Schema 配置 <a class="header-anchor" href="#定义-schema-配置" aria-label="Permalink to &quot;定义 Schema 配置&quot;">​</a></h3><p>Schema 配置能让用户在 Koishi 控制面板里进行配置，并在插件里使用。</p><p>ChatLuna 也提供了一套通用的 Schema，用于设置聊天限额，超时时间等。</p><p>这里我们直接基础即可，然后新增 <code>apiKeys</code> 字段，用于模拟 <code>apiKeys</code> 验证。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;example&#39;</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">inject</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&#39;chatluna&#39;</span><span style="color:#E1E4E8;">] </span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Config</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ChatLunaPlugin</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">Config</span><span style="color:#E1E4E8;"> {  </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">apiKeys</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">[]</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">}</span></span>
<span class="line has-focus"></span>
<span class="line has-focus"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Config</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Schema</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">Config</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Schema.</span><span style="color:#B392F0;">intersect</span><span style="color:#E1E4E8;">([</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    ChatLunaPlugin.Config,</span></span>
<span class="line has-focus"></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    Schema.</span><span style="color:#B392F0;">object</span><span style="color:#E1E4E8;">({</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">       apiKeys: Schema.</span><span style="color:#B392F0;">array</span><span style="color:#E1E4E8;">(Schema.</span><span style="color:#B392F0;">string</span><span style="color:#E1E4E8;">()).</span><span style="color:#B392F0;">description</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;API Key&#39;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    }).</span><span style="color:#B392F0;">description</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;请求设置&#39;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">])</span></span>
<span class="line has-focus"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">ctx</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Context</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// write your plugin here</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">...</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;example&#39;</span><span style="color:#24292E;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">inject</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;chatluna&#39;</span><span style="color:#24292E;">] </span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Config</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ChatLunaPlugin</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">Config</span><span style="color:#24292E;"> {  </span></span>
<span class="line has-focus"><span style="color:#24292E;">    </span><span style="color:#E36209;">apiKeys</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">[]</span></span>
<span class="line has-focus"><span style="color:#24292E;">}</span></span>
<span class="line has-focus"></span>
<span class="line has-focus"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Config</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Schema</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">Config</span><span style="color:#24292E;">&gt; </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Schema.</span><span style="color:#6F42C1;">intersect</span><span style="color:#24292E;">([</span></span>
<span class="line has-focus"><span style="color:#24292E;">    ChatLunaPlugin.Config,</span></span>
<span class="line has-focus"></span>
<span class="line has-focus"><span style="color:#24292E;">    Schema.</span><span style="color:#6F42C1;">object</span><span style="color:#24292E;">({</span></span>
<span class="line has-focus"><span style="color:#24292E;">       apiKeys: Schema.</span><span style="color:#6F42C1;">array</span><span style="color:#24292E;">(Schema.</span><span style="color:#6F42C1;">string</span><span style="color:#24292E;">()).</span><span style="color:#6F42C1;">description</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;API Key&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line has-focus"><span style="color:#24292E;">    }).</span><span style="color:#6F42C1;">description</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;请求设置&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line has-focus"><span style="color:#24292E;">])</span></span>
<span class="line has-focus"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">apply</span><span style="color:#24292E;">(</span><span style="color:#E36209;">ctx</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Context</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// write your plugin here</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>需要注意的是，ChatLuna 支持一个平台使用多份配置，来实现负载均衡或自动弹出无效配置。</p><p>因此在声明 <code>apiKeys</code> 字段时我们使用了 <code>Schema.array(Schema.string())</code> 而不是 <code>Schema.string()</code>，这样可以让用户在控制面板里配置多个 API Key。</p><h3 id="解析-clientconfig" tabindex="-1">解析 ClientConfig <a class="header-anchor" href="#解析-clientconfig" aria-label="Permalink to &quot;解析 ClientConfig&quot;">​</a></h3><p>在 ChatLuna 中，对于每个模型平台，都需要一套 <code>ClientConfig</code>，也就是平台配置，其的接口定义如下：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ClientConfig</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">apiKey</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">platform</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PlatformClientNames</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">maxRetries</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">number</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">concurrentMaxSize</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">number</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">apiEndpoint</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">timeout</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">number</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">chatLimit</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Computed</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">Awaitable</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">number</span><span style="color:#E1E4E8;">&gt;&gt;;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ClientConfig</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">apiKey</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">platform</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PlatformClientNames</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">maxRetries</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">number</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">concurrentMaxSize</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">number</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">apiEndpoint</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">timeout</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">number</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">chatLimit</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Computed</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">Awaitable</span><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">number</span><span style="color:#24292E;">&gt;&gt;;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>导入 <code>ClientConfig</code> 类型，然后新建一个 <code>ChatLunaPlugin</code>，其中两个泛型，第一个为当前插件的 Schema 配置接口，第二个为 <code>ClientConfig</code> 或其但的子类型。</p><p>传入构建参数的三个值，第一个为当前插件的 <code>Context</code>，第二个为当前插件的 Schema 配置实例，在后面可以用于解析 <code>ClientConfig</code>。第三个为当前的平台名，这也是识别不同平台的关键参数。</p><p><code>ClientConfig</code> 默认已经提供了 apiKey 等字段，我们无需继承直接使用即可。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">...</span></span>
<span class="line has-focus"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { ClientConfig } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;koishi-plugin-chatluna/lib/services/chat&#39;</span><span style="color:#E1E4E8;">; </span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">ctx</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Context</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">plugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ChatLunaPlugin</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">BingClientConfig</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">Config</span><span style="color:#E1E4E8;">&gt;(  </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">        ctx, </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">        config, </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;test&#39;</span><span style="color:#E1E4E8;">  </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    ) </span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">...</span></span>
<span class="line has-focus"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { ClientConfig } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;koishi-plugin-chatluna/lib/services/chat&#39;</span><span style="color:#24292E;">; </span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">...</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">apply</span><span style="color:#24292E;">(</span><span style="color:#E36209;">ctx</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Context</span><span style="color:#24292E;">) {</span></span>
<span class="line has-focus"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">plugin</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ChatLunaPlugin</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">BingClientConfig</span><span style="color:#24292E;">, </span><span style="color:#6F42C1;">Config</span><span style="color:#24292E;">&gt;(  </span></span>
<span class="line has-focus"><span style="color:#24292E;">        ctx, </span></span>
<span class="line has-focus"><span style="color:#24292E;">        config, </span></span>
<span class="line has-focus"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;test&#39;</span><span style="color:#24292E;">  </span></span>
<span class="line has-focus"><span style="color:#24292E;">    ) </span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>完成后我们监听 <code>ctx</code> 的 <code>ready</code> 参数，在里面解析 <code>ClientConfig</code>。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">ctx</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Context</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">plugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ChatLunaPlugin</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">BingClientConfig</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">Config</span><span style="color:#E1E4E8;">&gt;( </span></span>
<span class="line"><span style="color:#E1E4E8;">        ctx,</span></span>
<span class="line"><span style="color:#E1E4E8;">        config,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;test&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    )</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    ctx.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;ready&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> { </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 注意这句，需要把当前 Plugin 注册到 ChatLuna 服务里</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> plugin.</span><span style="color:#B392F0;">registerToService</span><span style="color:#E1E4E8;">() </span></span>
<span class="line has-focus"></span>
<span class="line has-focus"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 解析 ClientConfig</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> plugin.</span><span style="color:#B392F0;">parseConfig</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">config</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> config.apiKeys.</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">apiKey</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> { </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">                    apiKey, </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">                    platform: </span><span style="color:#9ECBFF;">&#39;test&#39;</span><span style="color:#E1E4E8;">, </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">                    chatLimit: config.chatTimeLimit, </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">                    timeout: config.timeout, </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">                    maxRetries: config.maxRetries, </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">                    concurrentMaxSize: config.chatConcurrentMaxSize, </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">                } </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">            }) </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">        }) </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    })</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">...</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">apply</span><span style="color:#24292E;">(</span><span style="color:#E36209;">ctx</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Context</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">plugin</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ChatLunaPlugin</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">BingClientConfig</span><span style="color:#24292E;">, </span><span style="color:#6F42C1;">Config</span><span style="color:#24292E;">&gt;( </span></span>
<span class="line"><span style="color:#24292E;">        ctx,</span></span>
<span class="line"><span style="color:#24292E;">        config,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;test&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    )</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#24292E;">    ctx.</span><span style="color:#6F42C1;">on</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;ready&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> { </span></span>
<span class="line has-focus"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 注意这句，需要把当前 Plugin 注册到 ChatLuna 服务里</span></span>
<span class="line has-focus"><span style="color:#24292E;">        </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> plugin.</span><span style="color:#6F42C1;">registerToService</span><span style="color:#24292E;">() </span></span>
<span class="line has-focus"></span>
<span class="line has-focus"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 解析 ClientConfig</span></span>
<span class="line has-focus"><span style="color:#24292E;">        </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> plugin.</span><span style="color:#6F42C1;">parseConfig</span><span style="color:#24292E;">((</span><span style="color:#E36209;">config</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line has-focus"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> config.apiKeys.</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">((</span><span style="color:#E36209;">apiKey</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line has-focus"><span style="color:#24292E;">                </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> { </span></span>
<span class="line has-focus"><span style="color:#24292E;">                    apiKey, </span></span>
<span class="line has-focus"><span style="color:#24292E;">                    platform: </span><span style="color:#032F62;">&#39;test&#39;</span><span style="color:#24292E;">, </span></span>
<span class="line has-focus"><span style="color:#24292E;">                    chatLimit: config.chatTimeLimit, </span></span>
<span class="line has-focus"><span style="color:#24292E;">                    timeout: config.timeout, </span></span>
<span class="line has-focus"><span style="color:#24292E;">                    maxRetries: config.maxRetries, </span></span>
<span class="line has-focus"><span style="color:#24292E;">                    concurrentMaxSize: config.chatConcurrentMaxSize, </span></span>
<span class="line has-focus"><span style="color:#24292E;">                } </span></span>
<span class="line has-focus"><span style="color:#24292E;">            }) </span></span>
<span class="line has-focus"><span style="color:#24292E;">        }) </span></span>
<span class="line has-focus"><span style="color:#24292E;">    })</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,30);function F(d,C,f,g,m,B){const l=p("PluginTabsTab"),e=p("PluginTabs");return t(),r("div",null,[y,n(e,null,{default:a(()=>[n(l,{label:"npm"},{default:a(()=>[i]),_:1}),n(l,{label:"yarn"},{default:a(()=>[u]),_:1})]),_:1}),h])}const q=c(E,[["render",F]]);export{D as __pageData,q as default};
