import{_ as a,c as e,o as t,a7 as o}from"./chunks/framework.DK5SkrRT.js";const r="/assets/plugin_market_spark.B9I441Ik.png",s="/assets/plugin_spark_adapter_1.BuxnnODi.png",p="/assets/plugin_spark_pic_1.uSGqjOOu.png",k=JSON.parse('{"title":"讯飞星火","description":"","frontmatter":{},"headers":[],"relativePath":"guide/configure-model-platform/spark.md","filePath":"guide/configure-model-platform/spark.md","lastUpdated":1714641321000}'),i={name:"guide/configure-model-platform/spark.md"},c=o('<h1 id="讯飞星火" tabindex="-1">讯飞星火 <a class="header-anchor" href="#讯飞星火" aria-label="Permalink to &quot;讯飞星火&quot;">​</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>讯飞星火是科大讯飞在 2023 5月宣布推出其认为规模最大、功能最强大的人工智能模型，旗下同时开放 星火1.5,星火2，星火3等模型 是相对于OpenAI适配器最稳定的一个</p><p>同时还推出了星火助手，能够让用户获得最好的特定体验</p><p>本适配器支持 plugin 聊天模式，能让模型调用本地插件工具，但不是很推荐调用</p><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><p>前往插件市场，搜索 <code>chatluna-spark-adapter</code>，安装即可</p><p><img src="'+r+'" alt="images"></p><h2 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h2><p>在配置之前，请先获取 星火平台的 <code>APPID APISecret APIKey</code></p><div class="tip custom-block"><p class="custom-block-title">提示</p><p>未来我们可能会录制官方教程，敬请期待。</p></div><p>获取到<code>APPID APISecret APIKey</code>后，转到 <code>spark-adapter </code>的配置页面</p><p>默认插件有一个空的适配项，填入你的 <code>APPID APISecret APIKey</code> 即可</p><p><img src="'+s+'" alt="images"></p><p>记得点击右上角的保存按钮</p><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><p>在 Spark 适配器的配置页面，点击运行按钮，如无误，你应该看不到任何错误 log，那即可转到 ChatLuna 的主插件页面</p><p>在主插件页面，下划到 <a href="./../useful-configurations.html#模版房间选项">模版房间选项</a>，查看 <a href="./../useful-configurations.html#defaultmodel">defaultModel</a> 的选项里是否含有 星火 模型，如果有，则说明你已经成功地接入了 星火 平台</p><p><img src="'+p+'" alt="images"></p>',19),l=[c];function d(n,_,u,h,m,f){return t(),e("div",null,l)}const P=a(i,[["render",d]]);export{k as __pageData,P as default};
